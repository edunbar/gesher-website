@import 'vars';
@import 'mixins';

html, body {
  font: $base-font;
  box-sizing: border-box;
  background: $black;
  color: $white;

  min-height: 100vh;
}

body {
  display: flex;
  flex-direction: column;
  justify-content: space-between;
  height: 100%;
}

header {
  display: flex;
  flex-grow: 1;
  flex-direction: column;
  background: $blue;

  img {
    height: 3em;
  }

  h1 {
    font-size: 2em;
    line-height: 1.25em;
    font-weight: 400;
  }
}

footer {
  display: flex;
  flex-direction: row;
  justify-content: center;
  align-items: center;

  color: $white;
  background: $black;
  padding: 1.5em 0;
  width: 100%;
  opacity: 0.5;
  @include ease(0.2s);

  &:hover {
    opacity: 1;
  }

  a, a:visited {
    color: $white;
    text-decoration: none;

    &:hover {
      color: rgba($white, 0.75);
    }
  }

  > div {
    padding: 0 2em;

    &:nth-child(n + 2) {
      border-left: 2px rgba($white, 0.25) solid;
    }
  }

  img {
    max-height: 1em;
  }
}

a.button {
  padding: 1em 2em;
  color: $black;
  border-radius: 2px;
  background: $white;
  text-decoration: none;
  margin-right: 2em;
  @include box-shadow(0.125em, 0, 1em, 0, rgba($black, 0.08));
  @include translate3d(0, 0, 0);
  @include ease(0.2s);

  display: inline-block;

  &:hover {
    @include box-shadow(0.225em, 0, 1.2em, 0, rgba($black, 0.08));
    @include translate3d(0, -0.1em, 0);
    background: $white2;

    &:active {
      @include ease(0.1s);
      @include translate3d(0, 0.1em, 0);
      background: $white2;
    }
  }
}

/**
 * Make all elements from the DOM inherit from the parent box-sizing
 * Since `*` has a specificity of 0, it does not override the `html` value
 * making all elements inheriting from the root box-sizing value
 * See: https://css-tricks.com/inheriting-box-sizing-probably-slightly-better-best-practice/
 */
*, ::before, ::after {
  box-sizing: inherit;
}
